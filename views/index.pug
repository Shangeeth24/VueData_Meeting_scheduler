html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel='stylesheet', href='/style1.css') 
    title Document
  body
    .nav
      .header-left
        img(src="https://www.vuedata.com/assets/vuedata%20light.png", alt="")
      .header-right
        a(href="/home", class=(currentPath === '/home' ? 'active' : ''))= nav1
        a(href="/Booking", class=(currentPath === '/Booking' ? 'active' : ''))= nav2


    #home
      .header-left
        h1= con1
      .header-right
        h1= con2
        #frame
          a(href="/today",class=(currentPath === '/today' ? 'active' : ''))= select1
          a(href="/week",class=(currentPath === '/week' ? 'active' : ''))= select2
          a(href="/home",class=(currentPath === '/home' ? 'active' : ''))= select3
    #table
      table
        tr
          th S.No
          //- th Meeting ID
          th Room Name
          th Organizer Name
          th Start Time
          th End Time
          th Actions
        each data, index in datas 
          tr
            td= index + 1 
            //- td= data.meetingId 
            td= data.roomName 
            td= data.employeeName 
            td
              | #{new Date(data.startTime).toLocaleString()}
            td
              | #{new Date(data.endTime).toLocaleString()}
            td
              #Updatebutton(onclick=`updateFunction('${data.meetingId}')`) Update 
              br
              #Deletebutton(onclick=`deleteFunction('${data.meetingId}')`) Delete 

    script.
      function deleteFunction(meetingId) {
        if (confirm("Are you sure you want to delete this entry?")) {
          fetch(`/delete/${meetingId}`, {
            method: 'DELETE',
          })
            .then((response) => {
              if (response.ok) {
                alert("Booking deleted successfully");
                location.reload(); 
              } else {
                alert("Failed to delete booking");
              }
            })
            .catch((error) => {
              console.error("Error deleting booking:", error);
              alert("Internal Server Error");
            });
        }
      }
      function updateFunction(meetingId) {    
       const updatedInfo = prompt("Enter updated information (e.g., room name, start time, end time, etc.)");

      if (updatedInfo !== null) {
      fetch(`/update/${meetingId}`, {
        method: 'PUT',
        body: JSON.stringify({ updatedInfo }), 
        headers: {
          'Content-Type': 'application/json',
        },
      })
      .then((response) => {
          if (response.ok) {
            alert("Booking updated successfully");
            location.reload(); 
          } else {
            alert("Failed to update booking");
          }
        })
        .catch((error) => {
          console.error("Error updating booking:", error);
          alert("Internal Server Error");
        });
      }
      }


      
      

      
 

